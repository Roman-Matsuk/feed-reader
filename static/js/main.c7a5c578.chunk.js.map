{"version":3,"sources":["components/Login/Login.js","api/user.js","api/feed-links.js","components/Article/Article.js","components/Container/Container.js","components/Feed/Feed.js","api/posts.js","components/ItemCard/ItemCard.js","components/ItemsPage/ItemsPage.js","components/Header/Header.js","components/AddNewItem/AddNewItem.js","components/AppLayout/AppLayout.js","App.js","reportWebVitals.js","index.js"],"names":["Login","setIsAuthenticated","useState","email","phone","user","setUser","history","useHistory","useEffect","fetch","then","res","json","className","htmlFor","id","type","value","onChange","event","prevState","target","onClick","push","window","localStorage","setItem","feedLinks","Article","location","match","state","title","contentSnippet","href","link","rel","Container","children","Feed","items","currentFeed","setCurrentFeed","current","find","feed","url","includes","map","item","BASE_URL","ItemCard","setItems","setTitle","isEditMode","setIsEditMode","userId","method","headers","body","JSON","stringify","console","log","editPost","prev","filter","prevItem","ItemsPage","Header","setSelectedItems","setIsAddNew","AddNewItem","selectedItems","setLinks","setLink","setBody","onSubmit","preventDefault","addPost","render","AppLayout","links","isAddNew","parser","Parser","feeds","a","CORS_PROXY","i","length","parseURL","fetchPosts","userid","exact","path","routerProps","App","isAuthenticated","auth","getItem","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7a5c578.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport './Login.scss';\n\nimport { getUser } from '../../api/user';\n\nexport const Login = ({ setIsAuthenticated }) => {\n  const [user, setUser] = useState({\n    email: '',\n    phone: ''\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    getUser().then(setUser);\n  }, [])\n\n  return (\n    <div className=\"login login--parameters\">\n      <label className=\"login__label\" htmlFor=\"email\">\n        Email\n      </label>\n      <input\n        className=\"login__input input\"\n        id=\"email\"\n        type=\"email\"\n        value={user.email}\n        onChange={event => {\n          setUser(prevState => ({...prevState, email: event.target.value}))\n        }}\n      />\n      <label className=\"login__label\" htmlFor=\"password\">\n        Password\n      </label>\n      <input className=\"login__input input\"\n        id=\"password\"\n        type=\"password\"\n        value={user.phone}\n        onChange={event => {\n          setUser(prevState => ({...prevState, phone: event.target.value}))\n        }}\n      />\n      <button className=\"login__button button\"\n        type=\"button\"\n        onClick={() => {\n          history.push('/');\n          setIsAuthenticated(true);\n          window.localStorage.setItem('isAuthenticated', true);\n        }}\n      >\n        Log in\n      </button>\n    </div>\n  )\n}","export const getUser = () => {\n  return fetch('https://jsonplaceholder.typicode.com/users/1')\n    .then(res => res.json());\n}","export const feedLinks = [\n  'https://www.nasa.gov/rss/dyn/breaking_news.rss',\n  'https://www.reddit.com/.rss',\n  'https://www.mobileworldlive.com/latest-stories/feed',\n  'https://feeds.simplecast.com/54nAGcIl'\n]","import React from 'react';\n\nimport './Article.scss';\n\nexport const Article = ({ history, location, match }) => {\n\n  return (\n    <div className=\"article\">\n      <h3 className=\"article__title\">{history.location.state.title}</h3>\n      <article className=\"article__content\">\n        {history.location.state.contentSnippet}\n      </article>\n      <a\n        className=\"article__link\"\n        href={history.location.state.link}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Link to sourse\n      </a>\n    </div>\n  );\n};","import React from 'react';\n\nimport './Container.scss';\n\nexport const Container = ({ children }) => {\n  return(\n    <div className=\"container\">\n      {children}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\n\nimport './Feed.scss';\n\nexport const Feed = ({ history, location, match, items }) => {\n  const [currentFeed, setCurrentFeed] = useState(null);\n\n  useEffect(() => {\n    const current = items.find(feed => match.url.includes(feed.title));\n\n    setCurrentFeed(current);\n  }, [match, items])\n\n  return (\n    <ul className=\"feed\">\n      {currentFeed && (\n        currentFeed.items.map(item => (\n          <li\n            className=\"feed__item\"\n            onClick={() => history.push(`/${currentFeed.title}/${item.title}`, item)}\n            key={item.title}\n          >\n            {item.title}\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n","const BASE_URL = 'https://jsonplaceholder.typicode.com/posts'\n\nexport function getPosts (userid) {\n  return fetch(BASE_URL + `?userId=${userid}`).then(res => res.json());\n};\n\nexport function deletePost (userId) {\n  return fetch(BASE_URL + `/${userId}`, {\n    method: 'DELETE'\n  }).then(res => console.log(res));\n};\n\nexport function addPost (userId, title, body) {\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      userId,\n      title,\n      body\n    })\n  }).then(res => console.log(res));\n};\n\nexport function editPost (userId, title) {\n  return fetch(BASE_URL + `/${userId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      title\n    })\n  }).then(res => console.log(res));\n};\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { deletePost, editPost } from '../../api/posts';\n\nimport './ItemCard.scss';\n\nexport const ItemCard = ({ item, setItems }) => {\n  const [title, setTitle] = useState(item.title);\n  const [isEditMode, setIsEditMode] = useState(false);\n  let history = useHistory();\n\n  return (\n    <div className=\"item-card\">\n      <div className=\"item-card__body\">\n        {isEditMode\n          ? (\n            <>\n              <input\n                className=\"input\"\n                type=\"text\"\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value)\n                }}\n              />\n              <button\n                className=\"item-card__button button\"\n                onClick={() => {\n                  editPost('1', title);\n                  setItems(prevState => {\n                    return prevState.map(prev => {\n                      if (prev.id === item.id) {\n                        prev = { ...prev, title}\n                      };\n\n                      return prev;\n                    })\n                  });\n                  setIsEditMode(false);\n                }}\n              >\n                Save\n              </button>\n            </>\n            )\n          : (\n            <h3 className=\"item-card__title\">\n              {item.title}\n            </h3>\n          )\n        }\n        {item.items &&\n          <button\n            className=\"item-card__button button\"\n            onClick={() => {\n              history.push(`/${item.title}`)\n            }}\n          >\n            See more\n          </button>\n        }\n        {item.userId && !isEditMode &&\n          <button\n            className=\"item-card__button button\"\n            onClick={() => {\n              setIsEditMode(true);\n            }}\n          >\n            Edit\n          </button>\n        }\n        <button\n          className=\"item-card__button button\"\n          onClick={() => {\n            setItems(prevState => {\n              return prevState.filter(prevItem => prevItem.title !== item.title)\n            });\n\n            if (item.userId) {\n              deletePost(item.userId);\n            }\n          }}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ItemCard } from '../ItemCard';\n\nimport './ItemsPage.scss';\n\nexport const ItemsPage = ({ items, setItems }) => {\n  return (\n    <div className=\"item-page\">\n      {items.map(item => (\n        <ItemCard\n          key={item.title}\n          item={item}\n          setItems={setItems}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = ({ setIsAuthenticated, setSelectedItems, setIsAddNew }) => {\n  const history = useHistory();\n\n  return (\n    <header className=\"header header--parameters\">\n      <h1 className=\"header__title\">Feeds</h1>\n      <div className=\"header__options\">\n        <button\n            className=\"header__button button button--secondary\"\n            type='button'\n            onClick={() => {\n              setSelectedItems('feeds');\n              setIsAddNew(false);\n              history.push('/');\n            }}\n          >\n            Feeds\n        </button>\n        <button\n            className=\"header__button button button--secondary\"\n            type='button'\n            onClick={() => {\n              setSelectedItems('posts');\n              setIsAddNew(false);\n              history.push('/');\n            }}\n          >\n            Posts\n        </button>\n        <button\n            className=\"header__button button button--secondary\"\n            type='button'\n            onClick={() => {\n              setIsAddNew(true);\n              history.push('/');\n            }}\n          >\n            Add New\n        </button>\n      </div>\n      <button\n          className=\"header__button button button--secondary\"\n          type='button'\n          onClick={() => {\n            history.push('/');\n            setIsAuthenticated(false);\n            window.localStorage.setItem('isAuthenticated', false);\n          }}\n        >\n          Logout\n      </button>\n    </header>\n  )\n};\n","import React, { useState } from 'react';\nimport { addPost } from '../../api/posts';\n\nimport './AddNewItem.scss';\n\nexport const AddNewItem = ({ selectedItems, setLinks, setItems }) => {\n  const [link, setLink] = useState('');\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  \n  const render = () => {\n    switch (selectedItems) {\n      case 'feeds':\n        return (\n          <>\n            <label className=\"add-form__label\" htmlFor=\"feed\">\n              Feed link\n            </label>\n            <input\n              className=\"add-form__input input\"\n              id='feed'\n              type='text'\n              value={link}\n              onChange={event => setLink(event.target.value)}\n            />\n          </>\n        );\n\n      case 'posts':\n        return (\n          <>\n            <label className=\"add-form__label\" htmlFor=\"title\">\n              Title\n            </label>\n            <input\n              className=\"add-form__input input\"\n              id=\"title\"\n              type='text'\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n            />\n            <label className=\"add-form__label\" htmlFor=\"title\">\n              Body\n            </label>\n            <input\n              className=\"add-form__input input\"\n              id=\"body\"\n              type='text'\n              value={body}\n              onChange={event => setBody(event.target.value)}\n            />\n          </>\n        )\n\n      default:\n        return (\n          <p>Something went wrong...</p>\n        )\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (selectedItems === 'feeds') {\n      setLinks(prevState => [...prevState, link]);\n    } else {\n      addPost('1', title, body);\n      setItems(prevState => [...prevState, { title, body, userId: '1'}]);\n    };\n\n    setLink('');\n    setTitle('');\n    setBody('');\n  }\n\n  return (\n    <form\n      className=\"add-form\"\n      onSubmit={handleSubmit}\n    >\n      {render()}\n      <button\n        className=\"add-form__submit button\"\n        type=\"submit\"\n      >\n        Submit\n      </button>\n    </form>\n  )\n};","import React, { useEffect, useState } from 'react';\nimport Parser from 'rss-parser';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { feedLinks } from '../../api/feed-links';\nimport { Article } from '../Article';\nimport { Container } from '../Container';\nimport { Feed } from '../Feed';\nimport { ItemsPage } from '../ItemsPage';\nimport { Header } from '../Header';\n\nimport { getPosts } from '../../api/posts';\nimport { AddNewItem } from '../AddNewItem';\n\nexport const AppLayout = ({ setIsAuthenticated }) => {\n  const [items, setItems] = useState([]);\n  const [links, setLinks] = useState(feedLinks);\n  const [selectedItems, setSelectedItems] = useState('feeds');\n  const [isAddNew, setIsAddNew] = useState(false);\n\n  useEffect(() => {\n    if (selectedItems === 'feeds') {\n      const parser = new Parser();\n      const feeds = [];\n  \n      const fetchPosts = async () => {\n        const CORS_PROXY = \"https://corsanywhere.herokuapp.com/\";\n  \n        for (let i = 0; i < links.length; i++) {\n          const url = CORS_PROXY + links[i];\n          const feed = await parser.parseURL(url)\n          \n          feeds.push(feed);\n        }\n        \n        setItems(feeds);\n      }\n      fetchPosts();\n    } else {\n      getPosts('1').then(res => setItems([...res]));\n    }\n\n  }, [links, selectedItems]);\n\n  return (\n    <>\n      <Header\n        setIsAuthenticated={setIsAuthenticated}\n        setSelectedItems={setSelectedItems}\n        setIsAddNew={setIsAddNew}\n      />\n      <Container>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={(routerProps) => {\n              if (isAddNew) {\n               return <AddNewItem selectedItems={selectedItems} setLinks={setLinks} setItems={setItems} />\n              }\n\n              return <ItemsPage items={items} setItems={setItems} {...routerProps} />\n            }}\n          />\n          <Route\n            exact\n            path='/:title'\n            render={(routerProps) =>\n              <Feed {...routerProps} items={items} />\n            }\n          />\n          <Route\n            exact\n            path='/:title/:article'\n            render={(routerProps) =>\n              <Article {...routerProps} items={items} />\n            }\n          />\n        </Switch>\n      </Container>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport { Login } from './components/Login';\nimport { AppLayout } from './components/AppLayout';\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  // const isAuthenticated = window.localStorage.getItem('isAuthenticated');\n  const auth = localStorage.getItem('isAuthenticated');\n  \n  useEffect(() => {\n    setIsAuthenticated(auth);\n\n    return () => {\n      localStorage.clear();\n    }\n  }, [auth]);\n\n  return (\n    <div className=\"app\">\n      {isAuthenticated === 'true'\n        ? <AppLayout setIsAuthenticated={setIsAuthenticated} />\n        : <Login setIsAuthenticated={setIsAuthenticated} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}