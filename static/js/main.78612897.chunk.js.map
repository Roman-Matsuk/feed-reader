{"version":3,"sources":["components/Login/Login.js","api/user.js","api/feed-links.js","components/Article/Article.js","components/Container/Container.js","components/Feed/Feed.js","api/posts.js","components/FeedCard/FeedCard.js","components/FeedPage/FeedPage.js","components/Header/Header.js","components/AppLayout/AppLayout.js","App.js","reportWebVitals.js","index.js"],"names":["Login","setIsAuthenticated","useState","email","phone","user","setUser","history","useHistory","useEffect","fetch","then","res","json","className","htmlFor","id","type","value","onChange","event","prevState","target","onClick","push","feedLinks","Article","location","match","feeds","state","title","content","href","link","rel","Container","children","Feed","currentFeed","setCurrentFeed","current","find","feed","url","includes","items","map","item","BASE_URL","FeedCard","setFeeds","userId","filter","method","console","log","FeedPage","Header","setLinks","AppLayout","links","parser","Parser","a","i","parseURL","length","userid","fetchPosts","exact","path","render","routerProps","App","isAuthenticated","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78612897.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport './Login.scss';\n\nimport { getUser } from '../../api/user';\n\nexport const Login = ({ setIsAuthenticated }) => {\n  const [user, setUser] = useState({\n    email: '',\n    phone: ''\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    getUser().then(setUser);\n  }, [])\n\n  return (\n    <div className=\"login\">\n      <label className=\"login__label\" htmlFor=\"email\">\n        Email\n      </label>\n      <input className=\"login__input\"\n        id=\"email\"\n        type=\"email\"\n        value={user.email}\n        onChange={event => {\n          setUser(prevState => ({...prevState, email: event.target.value}))\n        }}\n      />\n      <label className=\"login__label\" htmlFor=\"password\">\n        Password\n      </label>\n      <input className=\"login__input\"\n        id=\"password\"\n        type=\"password\"\n        value={user.phone}\n        onChange={event => {\n          setUser(prevState => ({...prevState, phone: event.target.value}))\n        }}\n      />\n      <button className=\"login__button button\"\n        type=\"button\"\n        onClick={() => {\n          history.push('/');\n          setIsAuthenticated(true);\n        }}\n      >\n        Log in\n      </button>\n    </div>\n  )\n}","export const getUser = () => {\n  return fetch('https://jsonplaceholder.typicode.com/users/1')\n    .then(res => res.json());\n}","export const feedLinks = [\n  'https://www.nasa.gov/rss/dyn/breaking_news.rss',\n  'https://www.reddit.com/.rss',\n  'https://www.mobileworldlive.com/latest-stories/feed'\n]","import React from 'react';\n\nimport './Article.scss';\n\nexport const Article = ({ history, location, match, feeds }) => {\n\n  return (\n    <div className=\"article\">\n      <h3 className=\"article__title\">{history.location.state.title}</h3>\n      <article className=\"article__content\">\n        {history.location.state.content}\n      </article>\n      <a\n        className=\"article__link\"\n        href={history.location.state.link}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Link to sourse\n      </a>\n    </div>\n  );\n};","import React from 'react';\n\nimport './Container.scss';\n\nexport const Container = ({ children }) => {\n  return(\n    <div className=\"container\">\n      {children}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\n\nimport './Feed.scss';\n\nexport const Feed = ({ history, location, match, feeds }) => {\n  const [currentFeed, setCurrentFeed] = useState(null);\n\n  useEffect(() => {\n    const current = feeds.find(feed => match.url.includes(feed.title));\n\n    setCurrentFeed(current);\n  }, [match, feeds])\n\n  return (\n    <ul className=\"feed\">\n      {currentFeed && (\n        currentFeed.items.map(item => (\n          <li\n            className=\"feed__item\"\n            onClick={() => history.push(`/${currentFeed.title}/${item.title}`, item)}\n            key={item.title}\n          >\n            {item.title}\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n","const BASE_URL = 'https://jsonplaceholder.typicode.com/posts'\n\nexport function getPosts (userid) {\n  return fetch(BASE_URL + `?userId=${userid}`).then(res => res.json());\n};\n\nexport function deletePost (userId) {\n  return fetch(BASE_URL + `/${userId}`, {\n    method: 'DELETE'\n  }).then(res => console.log(res));\n};\n\nexport function addPost (userId, title, body) {\n  return fetch(BASE_URL, {\n    method: 'POST',\n    body: {\n      userId,\n      title,\n      body\n    }\n  }).then(res => console.log(res));\n};","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { deletePost } from '../../api/posts';\n\nimport './FeedCard.scss';\n\nexport const FeedCard = ({ feed, setFeeds }) => {\n  let history = useHistory();\n\n  return (\n    <div className=\"feed-card\">\n      <div className=\"feed-card__body\">\n        <h3 className=\"feed-card__title\">\n           {feed.title}\n        </h3>\n        {feed.items &&\n          <button\n            className=\"feed-card__button button\"\n            onClick={() => {\n              history.push(`/${feed.title}`)\n            }}\n          >\n            See more\n          </button>\n        }\n        <button\n          className=\"feed-card__button button\"\n          onClick={() => {\n            setFeeds(prevState => {\n              return prevState.filter(item => item.title !== feed.title)\n            });\n\n            if (feed.userId) {\n              deletePost(feed.userId);\n            }\n          }}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FeedCard } from '../FeedCard';\n\nimport './FeedPage.scss';\n\nexport const FeedPage = ({ feeds, setFeeds }) => {\n  return (\n    <div className={`feed-page`}>\n      {feeds.map(feed => (\n        <FeedCard\n          key={feed.title}\n          feed={feed}\n          setFeeds={setFeeds}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = ({ setIsAuthenticated, setLinks }) => {\n  const history = useHistory();\n\n  return (\n    <header className=\"header header--parameters\">\n      <h1 className=\"header__title\">Feeds</h1>\n      <button\n          className=\"header__button button button--secondary\"\n          type='button'\n          onClick={() => {\n            history.push('/');\n            setIsAuthenticated(false);\n          }}\n        >\n          Logout\n      </button>\n    </header>\n  )\n};\n","import React, { useEffect, useState } from 'react';\nimport Parser from 'rss-parser';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { feedLinks } from '../../api/feed-links';\nimport { Article } from '../Article';\nimport { Container } from '../Container';\nimport { Feed } from '../Feed/Feed';\nimport { FeedPage } from '../FeedPage';\nimport { Header } from '../Header';\n\nimport { getPosts } from '../../api/posts';\n\nexport const AppLayout = ({ setIsAuthenticated }) => {\n  const [feeds, setFeeds] = useState([]);\n  const [links, setLinks] = useState(feedLinks);\n\n  useEffect(() => {\n    const parser = new Parser();\n\n    const fetchPosts = async () => {\n      const CORS_PROXY = \"https://corsanywhere.herokuapp.com/\";\n\n      for (let i = 0; i < links.length; i++) {\n        const url = CORS_PROXY + feedLinks[i];\n        const feed = await parser.parseURL(url)\n  \n        setFeeds(prevState => [...prevState, feed]);\n      }\n\n      getPosts('1').then(res => setFeeds(prevState => [...prevState, ...res]));\n    }\n    fetchPosts();\n  }, [links]);\n\n  return (\n    <>\n      <Header setIsAuthenticated={setIsAuthenticated} setLinks={setLinks} />\n      <Container>\n        <Switch>\n        <Route\n          exact\n          path='/'\n          render={(routerProps) =>\n            <FeedPage feeds={feeds} setFeeds={setFeeds} {...routerProps} />\n          }\n        />\n        <Route\n          exact\n          path='/:title'\n          render={(routerProps) =>\n            <Feed {...routerProps} feeds={feeds} />\n          }\n        />\n        <Route\n          exact\n          path='/:title/:article'\n          render={(routerProps) =>\n            <Article {...routerProps} feeds={feeds} />\n          }\n        />\n        </Switch>\n      </Container>\n    </>\n  );\n}","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Login } from './components/Login';\nimport { AppLayout } from './components/AppLayout/AppLayout';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <div className=\"app\">\n      {isAuthenticated\n        ? <AppLayout setIsAuthenticated={setIsAuthenticated} />\n        : <Login setIsAuthenticated={setIsAuthenticated} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}